{"version":3,"sources":["components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["AddTransaction","useState","text","setText","amount","setAmount","addTransaction","useContext","GlobalContext","onSubmit","e","preventDefault","newTransaction","id","uuidv4","className","htmlFor","type","value","onChange","target","placeholder","Balance","total","transactions","map","transaction","reduce","acc","item","toFixed","Header","IncomeExpenses","income","filter","expense","Transaction","deleteTransaction","sign","Math","abs","onClick","TransactionList","initialState","AppReducer","state","action","payload","createContext","App","useReducer","dispatch","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAgDeA,MA7Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACQC,EAAmBC,qBAAWC,GAA9BF,eAWR,OACE,gCACE,qDACA,uBAAMG,SAZV,SAAsBC,GACpBA,EAAEC,iBACF,IAAMC,EAAiB,CACrBC,GAAIC,cACJZ,KAAMA,EACNE,QAASA,GAEXE,EAAeM,IAKb,UACE,sBAAKG,UAAU,eAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACT,GAAD,OAAOP,EAAQO,EAAEU,OAAOF,QAClCG,YAAY,qBAGhB,sBAAKN,UAAU,eAAf,UACE,wBAAOC,QAAQ,SAAf,oBACS,uBADT,6CAIA,uBACEC,KAAK,SACLC,MAAOd,EACPe,SAAU,SAACT,GAAD,OAAOL,EAAUK,EAAEU,OAAOF,QACpCG,YAAY,uBAGhB,wBAAQN,UAAU,MAAlB,oCC3BOO,MAZf,WACE,IAEMC,EAFmBhB,qBAAWC,GAA5BgB,aACoBC,KAAI,SAACC,GAAD,OAAiBA,EAAYtB,UACxCuB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GACrE,OACE,gCACE,8CACA,mCAAMP,SCJGQ,MAJf,WACE,OAAO,kDC0BMC,MA1Bf,WACE,IACM5B,EADmBG,qBAAWC,GAA5BgB,aACoBC,KAAI,SAACC,GAAD,OAAiBA,EAAYtB,UACvD6B,EAAS7B,EACZ8B,QAAO,SAACL,GAAD,OAAUA,EAAO,KACxBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELK,EAAU/B,EACb8B,QAAO,SAACL,GAAD,OAAUA,EAAO,KACxBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAExC,OACE,sBAAKd,UAAU,oBAAf,UACE,gCACE,wCACA,mBAAGA,UAAU,aAAb,SAA2BkB,OAE7B,gCACE,yCACA,mBAAGlB,UAAU,cAAb,SAA4BoB,W,OCArBC,MApBf,YAAuC,IAAhBV,EAAe,EAAfA,YACbW,EAAsB9B,qBAAWC,GAAjC6B,kBAEFC,EAAOZ,EAAYtB,OAAS,EAAI,IAAM,IAC5C,OACE,qBAAIW,UAAWW,EAAYtB,OAAS,EAAI,QAAU,OAAlD,UACGsB,EAAYxB,KAAM,IACnB,iCACGoC,EADH,IACUC,KAAKC,IAAId,EAAYtB,WAE/B,wBACEqC,QAAS,kBAAMJ,EAAkBX,EAAYb,KAC7CE,UAAU,aAFZ,SAIE,cAAC,IAAD,UCCO2B,MAdf,WACE,IAAQlB,EAAiBjB,qBAAWC,GAA5BgB,aACR,OACE,gCACE,yCACA,oBAAIT,UAAU,OAAd,SACGS,EAAaC,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAAkCA,YAAaA,GAA7BA,EAAYb,aCFlC8B,EAAe,CACnBnB,aAAc,IAGhB,SAASoB,EAAWC,EAAOC,GACzB,OAAQA,EAAO7B,MACb,IAAK,qBACH,OAAO,2BACF4B,GADL,IAEErB,aAAcqB,EAAMrB,aAAaU,QAAO,SAACR,GACvC,OAAOA,EAAYb,KAAOiC,EAAOC,aAGvC,IAAK,kBACH,OAAO,2BACFF,GADL,IAEErB,aAAa,CAAEsB,EAAOC,SAAV,mBAAsBF,EAAMrB,iBAE5C,QACE,OAAOqB,GAIN,IAAMrC,EAAgBwC,wBAAcL,GAoC5BM,MAlCf,WACE,MAA0BC,qBAAWN,EAAYD,GAAjD,mBAAOE,EAAP,KAAcM,EAAd,KAcA,OACE,qBAAKpC,UAAU,YAAf,SACE,eAACP,EAAc4C,SAAf,CACElC,MAAO,CACLM,aAAcqB,EAAMrB,aACpBa,kBAlBR,SAA2BxB,GACzBsC,EAAS,CACPlC,KAAM,qBACN8B,QAASlC,KAgBLP,eAbR,SAAwBoB,GACtByB,EAAS,CACPlC,KAAM,kBACN8B,QAASrB,MAMT,UAOE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UC1DR2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87abdf74.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../App\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nfunction AddTransaction() {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: uuidv4(),\r\n      text: text, // in ES6 u remove the value\r\n      amount: +amount, // to tern it to a number and we could use parseInt\r\n    };\r\n    addTransaction(newTransaction);\r\n  }\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTransaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../App\";\r\n\r\nfunction Balance() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amount = transactions.map((transaction) => transaction.amount);\r\n  const total = amount.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <h2>Expense Tracker</h2>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../App\";\r\n\r\nfunction IncomeExpenses() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amount = transactions.map((transaction) => transaction.amount);\r\n  const income = amount\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = amount\r\n    .filter((item) => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../App\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nfunction Transaction({ transaction }) {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        <MdDeleteForever /> \r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../App\";\r\nimport Transaction  from \"./Transaction\";\r\n\r\nfunction TransactionList() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n","import \"./App.css\";\nimport { useReducer, createContext } from \"react\";\n\nimport AddTransaction from \"./components/AddTransaction\";\nimport Balance from \"./components/Balance\";\nimport Header from \"./components/Header\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\n\nconst initialState = {\n  transactions: [],\n};\n\nfunction AppReducer(state, action) {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter((transaction) => {\n          return transaction.id !== action.payload;\n        }),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    default:\n      return state;\n  }\n}\n\nexport const GlobalContext = createContext(initialState);\n\nfunction App() {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <GlobalContext.Provider\n        value={{\n          transactions: state.transactions,\n          deleteTransaction,\n          addTransaction,\n        }}\n      >\n        <Header />\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </GlobalContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}